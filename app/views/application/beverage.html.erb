<%= link_to "make bubbles", "/jsonbev", :remote => true %>

<script src="http://d3js.org/d3.v3.min.js"></script>
<style>

text {
  font: 10px sans-serif;
}

</style>
<script>

var testjson = <%= @jsonbevs %>

// begin d3 

var diameter = 960,
    format = d3.format(",d"),
    color = d3.scale.category20c();

var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(1.5);

var svg = d3.select("body").append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");

d3.json("", function(error, root) {
  var node = svg.selectAll(".node")
      .data(bubble.nodes(classes(testjson))
      .filter(function(d) { return !d.children; }))
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  node.append("title")
      .text(function(d) { return d.className + ": " + format(d.value); });

  node.append("circle")
      .attr("id", function(d) {return d.className})
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) { return color(d.packageName); });

  node.append("text")
      .attr("dy", ".3em")
      .style("text-anchor", "middle")
      .text(function(d) { return d.className.substring(0, d.r / 3); });
});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
  var classes = [];

  function recurse(name, node) {
    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
    else classes.push({packageName: name, className: node.name, value: node.size});
  }

  recurse(null, root);
  return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");

// end d3

// begin get tweets

setTimeout(getNewTweets,1000);
var after = 1;

function getNewTweets(){
    d3.json("beverage.json?after=", function(error, root) {
      // root[children].each child
      //   select(circle).attr(text) == child.name
      //     set this.r == child.size
      //   end
      //   .attr("r")
       console.log(root);
        });
    console.log(testjson);

  setTimeout(getNewTweets,1000);  
}

</script>

